
Lista wiadomości
mushrooms <- read.csv("C:\\Users\\Student\\... autorstwa Rafał 46649
10:48
Rafał 46649

mushrooms <- read.csv("C:\\Users\\Student\\Desktop\\mushrooms.csv")
stringsAsFactors = TRUE
predictive <- read.csv("C:\\Users\\Student\\Desktop\\predictive_maintenance.csv")
stringsAsFactors = TRUE

 

install.packages("splitTools")
library(splitTools)

 

indeksy <- sample(1:nrow(mushrooms), size = 0.8 * nrow(mushrooms))
train_mushrooms <- mushrooms[indeksy, ]
test_mushrooms <- mushrooms[-indeksy, ]

 

indeksy <- sample(1:nrow(predictive), size = 0.8 * nrow(predictive))
train_predictive <- predictive[indeksy, ]
test_predictive <- predictive[-indeksy, ]

 

install.packages("tree")
library(Tree)

 

install.packages("rpart")
library(rpart)

 

install.packages("e1071")
library(e1071)

 

install.packages("class")
library(class)

 

model_tree <- tree(class ~ ., data = train_mushrooms)
summary(model_tree)

 

model_rpart <- tree(class ~ ., data = train_mushrooms, method = "class")
summary(model_rpart)

 

model_tree <- tree(class ~ ., data = train_predictive)
summary(model_tree)

 

model_rpart <- tree(class ~ ., data = train_predictive, method = "class")
summary(model_rpart)

 

model_svm <- svm(class ~ ., data = train_mushrooms)
print(model_svm)

 

model_svm <- svm(class ~ ., data = train_predictive)
print(model_svm)

 

svm_pred <- predict(model_svm, newdata = test_mushrooms)
svm_accuracy <- sum(svm_pred == test_mushrooms$class)/ length(test_mushrooms$class)
cat("Dokładność modelu SVM:", svm_accuracy, "\n")

 

knn_pred <- knn(train = train_mushrooms[, -1], test = test_mushrooms[, -1], cl=train_mushrooms$class, k = 5)
knn_accuracy <- sum(knn_pred == test_mushrooms$class) / length(test_mushrooms$class)
cat("Dokładność k-NN:", knn_accuracy, "\n")

 

# Wczytaj pakiety i dane library(splitTools... autorstwa Rafał 46649
10:49Rafał 46649

# Wczytaj pakiety i dane

library(splitTools)

library(tree)  # Poprawna nazwa pakietu tree

library(rpart)

library(e1071)

library(class)

 

# Wczytaj dane

mushrooms <- read.csv("C:\\Users\\Student\\Desktop\\mushrooms.csv", stringsAsFactors = TRUE)

predictive <- read.csv("C:\\Users\\Student\\Desktop\\predictive_maintenance.csv", stringsAsFactors = TRUE)

 

# Podziel dane na zbiory treningowe i testowe

indeksy_mushrooms <- sample(1:nrow(mushrooms), size = 0.8 * nrow(mushrooms))

train_mushrooms <- mushrooms[indeksy_mushrooms, ]

test_mushrooms <- mushrooms[-indeksy_mushrooms, ]

 

indeksy_predictive <- sample(1:nrow(predictive), size = 0.8 * nrow(predictive))

train_predictive <- predictive[indeksy_predictive, ]

test_predictive <- predictive[-indeksy_predictive, ]

 

# Wytrenuj modele

model_tree_mushrooms <- tree(class ~ ., data = train_mushrooms)

summary(model_tree_mushrooms)

 

model_rpart_mushrooms <- rpart(class ~ ., data = train_mushrooms, method = "class")

summary(model_rpart_mushrooms)

 

model_tree_predictive <- tree(class ~ ., data = train_predictive)

summary(model_tree_predictive)

 

model_rpart_predictive <- rpart(class ~ ., data = train_predictive, method = "class")

summary(model_rpart_predictive)

 

model_svm_mushrooms <- svm(class ~ ., data = train_mushrooms)

print(model_svm_mushrooms)

 

model_svm_predictive <- svm(class ~ ., data = train_predictive)

print(model_svm_predictive)

 

# Przewidzenie i ocena dokładności

svm_pred_mushrooms <- predict(model_svm_mushrooms, newdata = test_mushrooms)

svm_accuracy_mushrooms <- sum(svm_pred_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)

cat("Dokładność modelu SVM na danych mushrooms:", svm_accuracy_mushrooms, "\n")

 

knn_pred_mushrooms <- knn(train = train_mushrooms[, -1], test = test_mushrooms[, -1], cl = train_mushrooms$class, k = 5)

knn_accuracy_mushrooms <- sum(knn_pred_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)

cat("Dokładność k-NN na danych mushrooms:", knn_accuracy_mushrooms, "\n")

 

svm_pred_predictive <- predict(model_svm_predictive, newdata = test_predictive)

svm_accuracy_predictive <- sum(svm_pred_predictive == test_predictive$class) / length(test_predictive$class)

cat("Dokładność modelu SVM na danych predictive:", svm_accuracy_predictive, "\n")

 

knn_pred_predictive <- knn(train = train_predictive[, -1], test = test_predictive[, -1], cl = train_predictive$class, k = 5)

knn_accuracy_predictive <- sum(knn_pred_predictive == test_predictive$class) / length(test_predictive$class)

cat("Dokładność k-NN na danych predictive:", knn_accuracy_predictive, "\n")

# Wczytaj pakiety i dane library(splitTools... autorstwa Rafał 46649
10:51Rafał 46649

# Wczytaj pakiety i dane

library(splitTools)

library(tree)  # Poprawna nazwa pakietu tree

library(rpart)

library(e1071)

library(class)

 

# Wczytaj dane

mushrooms <- read.csv("C:\\Users\\Student\\Desktop\\mushrooms.csv", stringsAsFactors = TRUE)

predictive <- read.csv("C:\\Users\\Student\\Desktop\\predictive_maintenance.csv", stringsAsFactors = TRUE)

 

# Podziel dane na zbiory treningowe i testowe

indeksy_mushrooms <- sample(1:nrow(mushrooms), size = 0.8 * nrow(mushrooms))

train_mushrooms <- mushrooms[indeksy_mushrooms, ]

test_mushrooms <- mushrooms[-indeksy_mushrooms, ]

 

indeksy_predictive <- sample(1:nrow(predictive), size = 0.8 * nrow(predictive))

train_predictive <- predictive[indeksy_predictive, ]

test_predictive <- predictive[-indeksy_predictive, ]

 

# Wytrenuj modele

model_tree_mushrooms <- tree(class ~ ., data = train_mushrooms)

model_rpart_mushrooms <- rpart(class ~ ., data = train_mushrooms, method = "class")

 

model_tree_predictive <- tree(class ~ ., data = train_predictive)

model_rpart_predictive <- rpart(class ~ ., data = train_predictive, method = "class")

 

# Wytrenuj modele SVM

model_svm_mushrooms <- svm(class ~ ., data = train_mushrooms)

model_svm_predictive <- svm(class ~ ., data = train_predictive)

 

# Wytrenuj modele k-NN

model_knn_mushrooms <- knn(train = train_mushrooms[, -1], test = test_mushrooms[, -1], cl = train_mushrooms$class, k = 5)

model_knn_predictive <- knn(train = train_predictive[, -1], test = test_predictive[, -1], cl = train_predictive$class, k = 5)

 

# Przewidzenie i ocena dokładności

svm_pred_mushrooms <- predict(model_svm_mushrooms, newdata = test_mushrooms)

svm_accuracy_mushrooms <- sum(svm_pred_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)

cat("Dokładność modelu SVM na danych mushrooms:", svm_accuracy_mushrooms, "\n")

 

knn_accuracy_mushrooms <- sum(model_knn_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)

cat("Dokładność k-NN na danych mushrooms:", knn_accuracy_mushrooms, "\n")

 

svm_pred_predictive <- predict(model_svm_predictive, newdata = test_predictive)

svm_accuracy_predictive <- sum(svm_pred_predictive == test_predictive$class) / length(test_predictive$class)

cat("Dokładność modelu SVM na danych predictive:", svm_accuracy_predictive, "\n")

 

knn_accuracy_predictive <- sum(model_knn_predictive == test_predictive$class) / length(test_predictive$class)

cat("Dokładność k-NN na danych predictive:", knn_accuracy_predictive, "\n")

Error in knn(train = train_predictive[, -1]... autorstwa Rafał 46649
10:53Rafał 46649

Error in knn(train = train_predictive[, -1], test = test_predictive[,  : 
  argumenty 'train' oraz 'class' mają różne długości> svm_pred_mushrooms <- predict(model_svm_mushrooms, newdata = test_mushrooms)Error: object 'model_svm_mushrooms' not found> svm_accuracy_mushrooms <- sum(svm_pred_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)Error: object 'svm_pred_mushrooms' not found> cat("Dokładność modelu SVM na danych mushrooms:", svm_accuracy_mushrooms, "\n")Error: object 'svm_accuracy_mushrooms' not found> knn_accuracy_mushrooms <- sum(model_knn_mushrooms == test_mushrooms$class) / length(test_mushrooms$class)Error: object 'model_knn_mushrooms' not found> cat("Dokładność k-NN na danych mushrooms:", knn_accuracy_mushrooms, "\n")Error: object 'knn_accuracy_mushrooms' not found> svm_pred_predictive <- predict(model_svm_predictive, newdata = test_predictive)Error: object 'model_svm_predictive' not found> svm_accuracy_predictive <- sum(svm_pred_predictive == test_predictive$class) / length(test_predictive$class)Error: object 'svm_pred_predictive' not found> cat("Dokładność modelu SVM na danych predictive:", svm_accuracy_predictive, "\n")Error: object 'svm_accuracy_predictive' not found> knn_accuracy_predictive <- sum(model_knn_predictive == test_predictive$class) / length(test_predictive$class)Error: object 'model_knn_predictive' not found> cat("Dokładność k-NN na danych predictive:", knn_accuracy_predictive, "\n")Error: object 'knn_accuracy_predictive' not found
Wiadomość autorstwa Rafał 46649 ma załącznik.
12:11
Rafał 46649

rzad.R
<!DOCTYPE html> <html lang="en"> <head>    ... autorstwa Rafał 46649
13:20
Rafał 46649

<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Sklep Internetowy</title>

    <link rel="stylesheet" href="styles.css">

</head>

<body>

    <header>

        <h1>Sklep Internetowy</h1>

        <nav>

            <ul>

                <li><a href="/">Strona Główna</a></li>

                <li><a href="/produkty">Produkty</a></li>

                <li><a href="/koszyk">Koszyk</a></li>

                <li><a href="/zamowienia">Zamówienia</a></li>

            </ul>

        </nav>

    </header>

    

    <main>

        <h2>Nowe Produkty</h2>

        <div class="product">

            <img src="product1.jpg" alt="Produkt 1">

            <h3>Produkt 1</h3>

            <p>Cena: $10.00</p>

            <button>Dodaj do Koszyka</button>

        </div>

        

        <div class="product">

            <img src="product2.jpg" alt="Produkt 2">

            <h3>Produkt 2</h3>

            <p>Cena: $15.00</p>

            <button>Dodaj do Koszyka</button>

        </div>

    </main>

 

    <footer>

        <p>&copy; 2023 Sklep Internetowy</p>

    </footer>

</body>

</html>

<!-- ... poprzedni kod ... -->   <main>    ... autorstwa Rafał 46649
13:22Rafał 46649

<!-- ... poprzedni kod ... -->

 

<main>

    <h2>Nowe Produkty</h2>

    <div class="product">

        <img src="product1.jpg" alt="Produkt 1">

        <h3>Produkt 1</h3>

        <p>Cena: $10.00</p>

        <button onclick="addReview('Produkt 1')">Dodaj Recenzję</button>

    </div>

    

    <div class="product">

        <img src="product2.jpg" alt="Produkt 2">

        <h3>Produkt 2</h3>

        <p>Cena: $15.00</p>

        <button onclick="addReview('Produkt 2')">Dodaj Recenzję</button>

    </div>

</main>

 

<!-- ... poprzedni kod ... -->

ma menu kontekstowe


